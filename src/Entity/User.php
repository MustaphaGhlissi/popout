<?php

namespace App\Entity;


use Doctrine\Common\Collections\ArrayCollection;
use Doctrine\Common\Collections\Collection;
use Doctrine\ORM\Mapping as ORM;
use FOS\UserBundle\Model\User as BaseUser;
use Symfony\Component\Serializer\Annotation\Groups;


/**
 * @ORM\Entity(repositoryClass="App\Repository\UserRepository")
 */
class User extends BaseUser
{
    /**
     * @var Friend
     * @ORM\OneToMany(targetEntity="App\Entity\Friend", cascade={"remove"} , mappedBy="classicUser")
     */
    private $friends;

    /**
     * @var Friend
     * @ORM\OneToMany(targetEntity="App\Entity\Friend", cascade={"remove"} , mappedBy="friendWith")
     */
    private $friendsWith;

    /**
     * @var Event
     * @ORM\OneToMany(targetEntity="App\Entity\Event", orphanRemoval=true, mappedBy="proUser")
     */
    private $events;

    /**
     * @var Quiz
     * @ORM\OneToMany(targetEntity="App\Entity\Quiz", orphanRemoval=true, mappedBy="user")
     */
    private $quizzes;

    /**
     * @var Log
     * @ORM\OneToMany(targetEntity="App\Entity\Log", orphanRemoval=true,mappedBy="user")
     */
    private $logs;

    /**
     * @var Booking
     * @ORM\OneToMany(targetEntity="App\Entity\Booking", orphanRemoval=true, mappedBy="classicUser")
     */
    private $bookings;

    /**
     * @var ScannedQRCode
     * @ORM\OneToMany(targetEntity="App\Entity\ScannedQRCode", orphanRemoval=true, mappedBy="classicUser")
     */
    private $scannedQRCodes;


    /**
     * @var Message
     * @ORM\OneToMany(targetEntity="App\Entity\Message", orphanRemoval=true, mappedBy="sender")
     */
    private $sentMessages;

    /**
     * @var Message
     * @ORM\OneToMany(targetEntity="App\Entity\Message", orphanRemoval=true, mappedBy="receiver")
     */
    private $receivedMessages;

    /**
     * @ORM\Id
     * @ORM\GeneratedValue
     * @ORM\Column(type="integer")
     */
    protected $id;

    /**
     * @var string
     * @ORM\Column(type="string", length=255, nullable=true)
     */
    protected $firstName;

    /**
     * @var string
     * @ORM\Column(type="string", length=255, nullable=true)
     */
    protected $lastName;

    /**
     * @var string
     * @ORM\Column(type="string", length=255, nullable=true)
     */
    protected $phone;

    /**
     * @var boolean
     * @ORM\Column(type="boolean", nullable = true)
     */
    private $status;

    /**
     * @var
     * @ORM\Column(name="qr_code", type="string", length=255, nullable=true)
     */
    private $qrCode;

    /**
     * @var integer
     * @ORM\Column(type="integer")
     */
    private $rewardPoint = 0;

    public function __construct()
    {
        parent::__construct();
        $this->quizzes = new ArrayCollection();
        $this->events = new ArrayCollection();
        $this->friends = new ArrayCollection();
        $this->friendsWith = new ArrayCollection();
        $this->logs = new ArrayCollection();
        $this->bookings = new ArrayCollection();
        $this->scannedQRCodes = new ArrayCollection();
        $this->sentMessages = new ArrayCollection();
        $this->receivedMessages = new ArrayCollection();
    }

    /**
     * @return mixed
     */
    public function getFirstName()
    {
        return $this->firstName;
    }

    /**
     * @param mixed $firstName
     */
    public function setFirstName($firstName): void
    {
        $this->firstName = $firstName;
    }

    /**
     * @return mixed
     */
    public function getLastName()
    {
        return $this->lastName;
    }

    /**
     * @param mixed $lastName
     */
    public function setLastName($lastName): void
    {
        $this->lastName = $lastName;
    }

    /**
     * @return mixed
     */
    public function getPhone()
    {
        return $this->phone;
    }

    /**
     * @param mixed $phone
     */
    public function setPhone($phone): void
    {
        $this->phone = $phone;
    }

    public function setEmail($email)
    {
        $this->setUsername($email);
        return parent::setEmail($email); // TODO: Change the autogenerated stub
    }

    public function setEmailCanonical($emailCanonical)
    {
        $this->setUsernameCanonical($emailCanonical);
        return parent::setEmailCanonical($emailCanonical); // TODO: Change the autogenerated stub
    }

    /**
     * @return Collection|Quiz
     */
    public function getQuizzes()
    {
        return $this->quizzes;
    }

    /**
     * @param Collection|Quiz $quizzes
     */
    public function setQuizzes($quizzes): void
    {
        $this->quizzes = $quizzes;
    }

    /**
     * @return Collection|Event
     */
    public function getEvents()
    {
        return $this->events;
    }

    /**
     * @param Collection|Event $events
     */
    public function setEvents($events): void
    {
        $this->events = $events;
    }

    /**
     * @return bool
     */
    public function isStatus(): bool
    {
        return $this->status;
    }

    /**
     * @param bool $status
     */
    public function setStatus(bool $status): void
    {
        $this->status = $status;
    }

    /**
     * @return mixed
     */
    public function getQrCode()
    {
        return $this->qrCode;
    }

    /**
     * @param mixed $qrCode
     */
    public function setQrCode($qrCode): void
    {
        $this->qrCode = $qrCode;
    }

    /**
     * @return int
     */
    public function getRewardPoint(): int
    {
        return $this->rewardPoint;
    }

    /**
     * @param int $rewardPoint
     */
    public function setRewardPoint(int $rewardPoint): void
    {
        $this->rewardPoint = $rewardPoint;
    }

    /**
     * @return Collection|Friend
     */
    public function getFriends(): Friend
    {
        return $this->friends;
    }

    /**
     * @param Collection|Friend $friends
     */
    public function setFriends(Friend $friends): void
    {
        $this->friends = $friends;
    }

    /**
     * @return Collection|Log
     */
    public function getLogs(): Log
    {
        return $this->logs;
    }

    /**
     * @param Collection|Log $logs
     */
    public function setLogs(Log $logs): void
    {
        $this->logs = $logs;
    }

    /**
     * @return Collection|Booking
     */
    public function getBookings(): Booking
    {
        return $this->bookings;
    }

    /**
     * @param Collection|Booking $bookings
     */
    public function setBookings(Booking $bookings): void
    {
        $this->bookings = $bookings;
    }

    /**
     * @return Collection|Friend
     */
    public function getFriendsWith(): Friend
    {
        return $this->friendsWith;
    }

    /**
     * @param Collection|Friend $friendsWith
     */
    public function setFriendsWith(Friend $friendsWith): void
    {
        $this->friendsWith = $friendsWith;
    }

    /**
     * @return ScannedQRCode
     */
    public function getScannedQRCodes(): ScannedQRCode
    {
        return $this->scannedQRCodes;
    }

    /**
     * @param ScannedQRCode $scannedQRCodes
     */
    public function setScannedQRCodes(ScannedQRCode $scannedQRCodes): void
    {
        $this->scannedQRCodes = $scannedQRCodes;
    }

    /**
     * @return Message
     */
    public function getSentMessages(): Message
    {
        return $this->sentMessages;
    }

    /**
     * @param Message $sentMessages
     */
    public function setSentMessages(Message $sentMessages): void
    {
        $this->sentMessages = $sentMessages;
    }

    /**
     * @return Message
     */
    public function getReceivedMessages(): Message
    {
        return $this->receivedMessages;
    }

    /**
     * @param Message $receivedMessages
     */
    public function setReceivedMessages(Message $receivedMessages): void
    {
        $this->receivedMessages = $receivedMessages;
    }



}
