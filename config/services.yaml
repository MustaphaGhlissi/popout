# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'fr'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    Lexik\Bundle\JWTAuthenticationBundle\Services\JWTManager:
        autowire: true

    Lexik\Bundle\JWTAuthenticationBundle\Security\Http\Authentication\AuthenticationSuccessHandler:
        autowire: true


    #Customize the response data when login successfully to the API
    popout_api.event.authentication_success_listener:
        class: App\EventListener\AuthenticationSuccessListener
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_authentication_success, method: onAuthenticationSuccessResponse }

    #Customize the response data when login failure to the API
    popout_api.event.authentication_failure_listener:
        class: App\EventListener\AuthenticationFailureListener
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_authentication_failure, method: onAuthenticationFailureResponse }

    App\EventListener\EntityListener:
        tags:
            - { name: doctrine.event_listener, event: prePersist }
            - { name: doctrine.event_listener, event: postPersist }
            - { name: doctrine.event_listener, event: preRemove }
            - { name: doctrine.event_listener, event: postRemove }

    App\Service\FileUploader:
        arguments: ['%events_dir%']

    App\Controller\Common\ResettingController:
        arguments: ['@fos_user.mailer']

    popout_mailer:
        class: App\Service\PopOutMailer
        arguments: ['@swiftmailer.mailer']

    App\Service\Stripe:
        arguments: ['%stripe_test_key%']

    App\Service\PopNotifier:
        arguments: ['@popout_mailer','%mailer_email%','%mailer_username%']

    App\Service\PusherNotifier:
        arguments: ['%env(PUSHER_PROD)%','%env(PUSHER_APP_KEY)%','%env(PUSHER_APP_ID)%','%env(PUSHER_APP_SECRET)%']
